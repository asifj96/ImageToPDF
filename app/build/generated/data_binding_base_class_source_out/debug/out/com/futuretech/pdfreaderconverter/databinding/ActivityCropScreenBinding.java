// Generated by data binding compiler. Do not edit!
package com.futuretech.pdfreaderconverter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.futuretech.pdfreaderconverter.R;
import com.theartofdev.edmodo.cropper.CropImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityCropScreenBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout cLApply;

  @NonNull
  public final ConstraintLayout cLCropPreview;

  @NonNull
  public final ConstraintLayout cLFitImage;

  @NonNull
  public final ConstraintLayout cLFlip;

  @NonNull
  public final ConstraintLayout cLRotate;

  @NonNull
  public final CropImageView cropView;

  @NonNull
  public final ImageView iVApply;

  @NonNull
  public final ImageView iVFlipHorizontal;

  @NonNull
  public final ImageView iVReset;

  @NonNull
  public final ImageView iVRotate;

  @NonNull
  public final LinearLayout mCvBottomBar;

  @NonNull
  public final LayoutMainToolbarBinding toolbar;

  @NonNull
  public final TextView tvApply;

  @NonNull
  public final TextView tvFitImage;

  @NonNull
  public final TextView tvFlipHorizontal;

  @NonNull
  public final TextView tvRotateLeft;

  protected ActivityCropScreenBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout cLApply, ConstraintLayout cLCropPreview, ConstraintLayout cLFitImage,
      ConstraintLayout cLFlip, ConstraintLayout cLRotate, CropImageView cropView, ImageView iVApply,
      ImageView iVFlipHorizontal, ImageView iVReset, ImageView iVRotate, LinearLayout mCvBottomBar,
      LayoutMainToolbarBinding toolbar, TextView tvApply, TextView tvFitImage,
      TextView tvFlipHorizontal, TextView tvRotateLeft) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cLApply = cLApply;
    this.cLCropPreview = cLCropPreview;
    this.cLFitImage = cLFitImage;
    this.cLFlip = cLFlip;
    this.cLRotate = cLRotate;
    this.cropView = cropView;
    this.iVApply = iVApply;
    this.iVFlipHorizontal = iVFlipHorizontal;
    this.iVReset = iVReset;
    this.iVRotate = iVRotate;
    this.mCvBottomBar = mCvBottomBar;
    this.toolbar = toolbar;
    this.tvApply = tvApply;
    this.tvFitImage = tvFitImage;
    this.tvFlipHorizontal = tvFlipHorizontal;
    this.tvRotateLeft = tvRotateLeft;
  }

  @NonNull
  public static ActivityCropScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_crop_screen, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityCropScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityCropScreenBinding>inflateInternal(inflater, R.layout.activity_crop_screen, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityCropScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_crop_screen, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityCropScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityCropScreenBinding>inflateInternal(inflater, R.layout.activity_crop_screen, null, false, component);
  }

  public static ActivityCropScreenBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityCropScreenBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityCropScreenBinding)bind(component, view, R.layout.activity_crop_screen);
  }
}
