// Generated by data binding compiler. Do not edit!
package com.futuretech.pdfreaderconverter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.futuretech.pdfreaderconverter.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutMainToolbarBinding extends ViewDataBinding {
  @NonNull
  public final ImageView iVBackArrow;

  @NonNull
  public final ImageView iVDropDown;

  @NonNull
  public final ImageView iVFlashMode;

  @NonNull
  public final ImageView iVSearch;

  @NonNull
  public final ImageView iVShare;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvApply;

  @NonNull
  public final TextView tvToolbarTitle;

  protected LayoutMainToolbarBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView iVBackArrow, ImageView iVDropDown, ImageView iVFlashMode, ImageView iVSearch,
      ImageView iVShare, Toolbar toolbar, TextView tvApply, TextView tvToolbarTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.iVBackArrow = iVBackArrow;
    this.iVDropDown = iVDropDown;
    this.iVFlashMode = iVFlashMode;
    this.iVSearch = iVSearch;
    this.iVShare = iVShare;
    this.toolbar = toolbar;
    this.tvApply = tvApply;
    this.tvToolbarTitle = tvToolbarTitle;
  }

  @NonNull
  public static LayoutMainToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_main_toolbar, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutMainToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutMainToolbarBinding>inflateInternal(inflater, R.layout.layout_main_toolbar, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutMainToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_main_toolbar, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutMainToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutMainToolbarBinding>inflateInternal(inflater, R.layout.layout_main_toolbar, null, false, component);
  }

  public static LayoutMainToolbarBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutMainToolbarBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutMainToolbarBinding)bind(component, view, R.layout.layout_main_toolbar);
  }
}
